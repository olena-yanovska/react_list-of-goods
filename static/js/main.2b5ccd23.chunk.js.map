{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","reverse","setState","sortByAlphabet","ALPHABET","sortByLength","LENGTH","reset","this","visibleGoods","goods","sort","a","b","localeCompare","length","getReorderedGoods","isResetButtonActive","className","type","cn","onClick","disabled","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAuCE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,QAAU,WACR,EAAKC,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBARzB,EAYEK,eAAiB,WACf,EAAKD,SAAS,CAAEH,SAAUL,EAASU,YAbvC,EAgBEC,aAAe,WACb,EAAKH,SAAS,CAAEH,SAAUL,EAASY,UAjBvC,EAoBEC,MAAQ,WACN,EAAKL,SAAS,CAAEH,SAAUL,EAASM,KAAMF,YAAY,KArBzD,4CAwBE,WACE,MAAiCU,KAAKX,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdU,EAtDH,SACLC,EADK,GAGJ,IADCX,EACF,EADEA,SAAUD,EACZ,EADYA,WAENW,EAAY,YAAOC,GAEzB,OAAQX,GACN,KAAKL,EAASU,SACZK,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAChBD,EAAEE,cAAcD,MAClB,MAEF,KAAKnB,EAASY,OACZG,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAChBD,EAAEG,OAASF,EAAEE,UAWnB,OAJIjB,GACFW,EAAaR,UAGRQ,EA6BgBO,CAAkBrB,EAAiBa,KAAKX,OAEvDoB,EAAsBnB,GAAeC,IAAaL,EAASM,KAEjE,OACE,qBAAKkB,UAAU,UAAf,SACE,sBAAKA,UAAU,sBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYrB,IAAaL,EAASU,WAEtCiB,QAASb,KAAKL,eANhB,iCAWA,wBACEgB,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYrB,IAAaL,EAASY,SAEtCe,QAASb,KAAKH,aANhB,4BAWA,wBACEc,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAatB,IAEjBuB,QAASb,KAAKP,QANhB,qBAWA,wBACEqB,UAAWL,IAAuB,EAClCE,KAAK,SACLD,UAAU,4BACVG,QAASb,KAAKD,MAJhB,sBAUF,6BACGE,EAAac,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,iBA/EtC,GAAyBC,IAAMC,WCtD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2b5ccd23.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: State,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort((a, b) => (\n        a.localeCompare(b)));\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods.sort((a, b) => (\n        a.length - b.length));\n      break;\n\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortByAlphabet = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  reset = () => {\n    this.setState({ sortType: SortType.NONE, isReversed: false });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const visibleGoods = getReorderedGoods(goodsFromServer, this.state);\n\n    const isResetButtonActive = isReversed || (sortType !== SortType.NONE);\n\n    return (\n      <div className=\"wrapper\">\n        <div className=\"section content box\">\n          <div className=\"buttons\">\n            <button\n              type=\"button\"\n              className={cn(\n                'button is-info',\n                { 'is-light': sortType !== SortType.ALPHABET },\n              )}\n              onClick={this.sortByAlphabet}\n            >\n              Sort alphabetically\n            </button>\n\n            <button\n              type=\"button\"\n              className={cn(\n                'button is-success',\n                { 'is-light': sortType !== SortType.LENGTH },\n              )}\n              onClick={this.sortByLength}\n            >\n              Sort by length\n            </button>\n\n            <button\n              type=\"button\"\n              className={cn(\n                'button is-warning',\n                { 'is-light': !isReversed },\n              )}\n              onClick={this.reverse}\n            >\n              Reverse\n            </button>\n\n            <button\n              disabled={!isResetButtonActive && true}\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          </div>\n\n          <ul>\n            {visibleGoods.map(good => (\n              <li data-cy=\"Good\" key={good}>{good}</li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}